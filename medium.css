@import url('https://fonts.googleapis.com/css2?family=IBM+Plex');
@import url('https://fonts.googleapis.com/css2?family=Inter&display=swap');

* {
    /* font-family: 'Vina Sans', cursive; */
    font-family: 'IBM Plex Mono', monospace;
    font-family: 'Inter', sans-serif;
    font-weight: 500;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    background: inherit;
    
}

body {
    display: grid;
    grid-template-columns: minmax(0, 3vmax) 1fr 4fr 0;
    grid-template-rows: 1fr;
    gap: 0 1vmin;
    height: 100vh;
    align-items: stretch;
}

.dark {
    --r: 180deg;
    --base: 255, 255, 255;
    --trackColor: 91, 87, 87;
    color: white;
    background: rgb(44, 44, 44);
}

.light {
    --r: 0deg;
    --base: 0, 0, 0;
    --trackColor: 209, 207, 207;
    color: black;
}

.slider {
    display: grid;
    gap: 5% 0;
    grid-template-columns: repeat(5, minmax(min-content, 1fr));
    grid-auto-rows: max-content;
    font-size: 1em;
}

.slider > div:not(.track) {
    user-select: none;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.slider label {
    white-space: nowrap;
    text-align: right;
    grid-column-end: -1;
    text-transform: capitalize;
}

.slider .track {
    --x: 0px;
    grid-column: 1/-1;
    height: 1lh;
    position: relative;
    border-radius: 0.1lh;
    background: rgb(var(--trackColor)) linear-gradient(to right, rgba(var(--base), 0.5) 0 var(--x), transparent var(--x) 100%);
}

.slider .thumb {
    top: 0;
    left: 0;
    width: 2%;
    width: 1.5ex;
    height: 1lh;
    position: absolute;
    border-radius: 0.1lh;
    background-color: rgb(var(--base));
    translate: calc(var(--x) - 50%);
    transform: scale(1.1);
    transform-origin: center;
}

.preview {
    display: grid;
    align-items: stretch;
    grid-template-rows: repeat(3, min-content) 1fr min-content;
    margin: 1vmin 0;
    gap: 1vmin;
}

.preview > div:last-of-type {
    display: grid;
    justify-content: space-between;
    align-items: stretch;
    grid-template-rows: min-content;
}

.preview .data {
    display: grid;
    gap: 0.5lh 0;
    padding: 0.25lh;
    align-items: center;
    grid-auto-rows: 1.5lh;
    background: rgba(var(--base), 0.1);
    border-radius: 0.25lh;
    text-transform: capitalize;
    grid-template-columns: repeat(4, 1fr);
}

.preview .data label:last-of-type {
    grid-column: span 3;
}

.preview .data input {
    font-size: 1em;
    margin-right: 1ch;
    align-self: center;
    justify-self: last baseline;
    background-color: transparent;
}

button {
    user-select: none;
    border: none;
    background-color: rgba(var(--base), 0.1);
    text-transform: uppercase;
    font-size: 1.1em;
    border-radius: 0.2lh;
    padding: 0.25lh 0;
    color: inherit;
    transition: background-color;
}

button:hover {
    background-color: rgba(var(--base), 0.2);
}

button:active {
    background-color: rgba(var(--base), 0.3);
}

#previewCanvas {
    width: 100%;
    /* aspect-ratio: 1; */
}

.select {
    display: grid;
    gap: 1ex;
    grid-auto-columns: 1fr;
    grid-auto-flow: column;
    justify-content: center;
    align-self: stretch;
}

.select > * {
    flex-grow: 1;
    font-size: 0.9em;
}

.select .clicked {
    background-color: hsla(348, 83%, 50%, 0.2);
}

canvas {
    border-radius: 0.5ex;
    box-shadow: inset 0 0 2ex rgba(0, 0, 0, 0.1);
}

.dark canvas{
    box-shadow: inset 0 0 2ex rgba(0, 0, 0, 0.4);
}

#medium {
    width: 100%;
    margin: 1vmin 0;
}

input[type="color"] {
    appearance: none;
    background-color: transparent;
    border: none;
    height: 5ex;
    width: 75%;
    height: 90%;
}

input[type="color"]::-webkit-color-swatch {
    box-shadow: 0 0 2ex rgba(0, 0, 0, 0.25);
    outline: 1px solid rgba(var(--base), 0.25);
    border: none;
    width: 100%;
    border-radius: 0.5ex;
}

input[type="number"] {
    appearance: none;
    border: none;
    border-bottom: 1px solid rgb(var(--base));
    width: 5ch;
    color: inherit;
}

.functionBar {
    display: grid;
    padding: 1vmin 0;
    gap: 1vmin;
    justify-items: center;
    background-color: rgb(var(--trackColor), 0.5);
}

.mode {
    width: 70%;
    aspect-ratio: 1 / 1;
    background: none;
}

.mode :where(circle, rect) {
    fill: rgb(var(--base));
}

.mode svg {
    transition: transform 2s;
    transform-origin: center;
    transform: rotate(var(--r));
}

circle {
    outline: 3px solid rgba(218, 165, 32, 0.5);
    border-radius: 50%;
}

h4 {
    padding: 0;
    margin: 0 0 0.5lh;
    color: #e81741;
    font-weight: 600;
    border-bottom: 1px solid #e8174153;
}

label {
    background-color: transparent;
}
